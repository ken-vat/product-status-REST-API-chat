# -*- coding: utf-8 -*-
"""og-rest-langchain-create-csv-agent.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t5H6yXwJtBGQHF2FcbtUMbI2BjSXl6QS
"""

###--------
## This works for single csv, but multi-csv inputs seems to have problem
## Tabling this for now
### ---------

import os

os.environ['OPENAI_API_KEY'] = ''

#print(os.environ.get('OPENAI_API_KEY'))

!pip install pandas
import pandas as pd
import requests
import re
import csv

!pip install --upgrade langchain
import langchain

#!pip install openai
from langchain.llms import OpenAI


!pip install langchain_experimental
!pip install langchain_experimental.agents
import langchain_experimental.agents
import langchain_experimental.agents.agent_toolkits
import langchain_experimental.agents.agent_toolkits.pandas
import langchain_experimental.agents.agent_toolkits.csv
from langchain.agents.agent_types import AgentType
from langchain_experimental.agents.agent_toolkits.pandas.base import create_pandas_dataframe_agent
from langchain_experimental.agents.agent_toolkits.csv.base import create_csv_agent


from langchain.chat_models import ChatOpenAI
openai_chatllm = ChatOpenAI(model_name="gpt-3.5-turbo", temperature=0.0)

# THis part is for OG REST json file

# GET ports
#df = pd.read_json (r'./sample_data/og-jsons/get-ports-output.json')
#df.to_csv (r'./sample_data/og-csvs/get-ports-output.csv', index = False)

# GET syslog
df = pd.read_json (r'./sample_data/og-jsons/get-syslog-output.json')
df.to_csv (r'./sample_data/og-csvs/get-syslog-output.csv', index = False)

# GET lldp-neighbor
df = pd.read_json (r'./sample_data/og-jsons/get-monitor-lldp-neighbor.json')
df.to_csv (r'./sample_data/og-csvs/get-monitor-lldp-neighbor.csv', index = False)

#    ["./sample_data/og-csvs/get-monitor-lldp-neighbor.csv","./sample_data/og-csvs/get-monitor-lldp-neighbor.csv","./sample_data/og-csvs/get-syslog-output.csv"],

agent = create_csv_agent(
    openai_chatllm,
    ["./sample_data/og-csvs/get-monitor-lldp-neighbor.csv", "./sample_data/og-csvs/get-syslog-output.csv"],
    verbose=True,
    agent_type=AgentType.OPENAI_FUNCTIONS,
)

# For OG rest api
sample_prompts = ["what is the port name of foobar",
                   "what is the public key used"]

agent.run("which user session got closed")

for prompt in sample_prompts:
  agent.run(prompt)

